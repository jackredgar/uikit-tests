// Generated by Selenium IDE
import { Builder, By } from 'selenium-webdriver'
import 'dotenv/config'
import { goToLSG } from '../utilities.js'

describe('Create Password', function() {
  this.timeout(30000)
  let driver
  let vars

  let env = process.env.ENVIRONMENT
  let Component_URL = env == "QA" ? "https://axosbank-qa-sentry.outsystemsenterprise.com/AXOS_Reactive_LSG/PatternDetail?MenuCategoryId=8&MenuSubCategorId=90" : "https://axosbank-dev-sentry.outsystemsenterprise.com/AXOS_Reactive_LSG/PatternDetail?MenuCategoryId=8&MenuSubCategorId=90"

  let savedCookies = null;

  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })

  it('TypeUppercase', async function() {
    await driver.manage().setTimeouts({ implicit: 5000 });
    savedCookies = await goToLSG(driver, Component_URL, savedCookies);

    await driver.findElement(By.css("div[data-block='CustomPatterns.PasswordCreate'] input")).click()
    await driver.findElement(By.css("div[data-block='CustomPatterns.PasswordCreate'] input")).sendKeys("E")
    
    await driver.findElement(By.xpath('//div[contains(text(), "One uppercase letter")]/i[contains(@class, "password-condition-valid")]'))
  })

  it('TypeLowercase', async function() {
    await driver.manage().setTimeouts({ implicit: 5000 });
    savedCookies = await goToLSG(driver, Component_URL, savedCookies);

    await driver.findElement(By.css("div[data-block='CustomPatterns.PasswordCreate'] input")).click()
    await driver.findElement(By.css("div[data-block='CustomPatterns.PasswordCreate'] input")).sendKeys("e")
    
    await driver.findElement(By.xpath('//div[contains(text(), "One lowercase letter")]/i[contains(@class, "password-condition-valid")]'))
  })

  it('TypeNumber', async function() {
    await driver.manage().setTimeouts({ implicit: 5000 });
    savedCookies = await goToLSG(driver, Component_URL, savedCookies);

    await driver.findElement(By.css("div[data-block='CustomPatterns.PasswordCreate'] input")).click()
    await driver.findElement(By.css("div[data-block='CustomPatterns.PasswordCreate'] input")).sendKeys("3")
    
    await driver.findElement(By.xpath('//div[contains(text(), "One number")]/i[contains(@class, "password-condition-valid")]'))
  })

  it('TypeSymbol', async function() {
    await driver.manage().setTimeouts({ implicit: 5000 });
    savedCookies = await goToLSG(driver, Component_URL, savedCookies);

    await driver.findElement(By.css("div[data-block='CustomPatterns.PasswordCreate'] input")).click()
    await driver.findElement(By.css("div[data-block='CustomPatterns.PasswordCreate'] input")).sendKeys("!")
    
    await driver.findElement(By.xpath('//div[contains(text(), "One valid symbol (#?!@$%^&*+-)")]/i[contains(@class, "password-condition-valid")]'))
  })

  it('TypeMinChars', async function() {
    await driver.manage().setTimeouts({ implicit: 5000 });
    savedCookies = await goToLSG(driver, Component_URL, savedCookies);

    await driver.findElement(By.css("div[data-block='CustomPatterns.PasswordCreate'] input")).click()
    await driver.findElement(By.css("div[data-block='CustomPatterns.PasswordCreate'] input")).sendKeys("atleasteight")

    await driver.findElement(By.xpath('//span[contains(text(), "8-32 characters")]/parent::div/i[contains(@class, "password-condition-valid")]'))
  })

  it('TypeAll', async function() {
    await driver.manage().setTimeouts({ implicit: 5000 });
    savedCookies = await goToLSG(driver, Component_URL, savedCookies);

    await driver.findElement(By.css("div[data-block='CustomPatterns.PasswordCreate'] input")).click()
    await driver.findElement(By.css("div[data-block='CustomPatterns.PasswordCreate'] input")).sendKeys("Bank1234#")

    await driver.findElement(By.xpath('//div[contains(text(), "One uppercase letter")]/i[contains(@class, "password-condition-valid")]'))
    await driver.findElement(By.xpath('//div[contains(text(), "One lowercase letter")]/i[contains(@class, "password-condition-valid")]'))
    await driver.findElement(By.xpath('//div[contains(text(), "One number")]/i[contains(@class, "password-condition-valid")]'))
    await driver.findElement(By.xpath('//div[contains(text(), "One valid symbol (#?!@$%^&*+-)")]/i[contains(@class, "password-condition-valid")]'))
    await driver.findElement(By.xpath('//span[contains(text(), "8-32 characters")]/parent::div/i[contains(@class, "password-condition-valid")]'))
  })

})


