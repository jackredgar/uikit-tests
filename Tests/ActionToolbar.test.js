// Generated by Selenium IDE
const { Builder, By, Key, until, ExpectedConditions } = require('selenium-webdriver')
const assert = require('assert')
require('dotenv').config()

describe('Action Toolbar', function() {
  this.timeout(30000)
  let driver
  let env = process.env.ENVIRONMENT
  let LSG_URL = env == "QA" ? "https://axosbank-qa-sentry.outsystemsenterprise.com/AXOS_Reactive_LSG/" : "https://axosbank-dev-sentry.outsystemsenterprise.com/AXOS_Reactive_LSG/"
  let Component_URL = env == "QA" ? "https://axosbank-qa-sentry.outsystemsenterprise.com/AXOS_Reactive_LSG/PatternDetail?MenuCategoryId=8&MenuSubCategorId=119" : "https://axosbank-dev-sentry.outsystemsenterprise.com/AXOS_Reactive_LSG/PatternDetail?MenuCategoryId=8&MenuSubCategorId=119"

  let savedCookies = null;

  async function goToLSG(driver, componentURL) {
    await driver.get(LSG_URL)
    driver.manage().window().maximize();
    if (savedCookies != null) {
      for (let i = 0; i < savedCookies.length; i++) {
        // console.log("individual cookie", savedCookies[i])
        await driver.manage().addCookie(savedCookies[i]);
      }
      await driver.navigate().to(componentURL);
    } else {
      await driver.findElement(By.css("#Input_UsernameVal")).click()
      await driver.findElement(By.css("#Input_UsernameVal")).sendKeys("LSG_Dev")
      await driver.findElement(By.css("#Input_PasswordVal")).click()
      await driver.findElement(By.css("#Input_PasswordVal")).sendKeys("pwd123")
      await driver.findElement(By.xpath("//*[@id='b6-Button']/button")).click()
      await driver.findElement(By.xpath("//*[@id='b2-Content']/h1/div[2]/span"))
      await driver.manage().getCookies().then(function(cookies) {
        // console.log('cookie details => ', cookies);
        savedCookies = cookies; 
      });
      await driver.navigate().to(componentURL);
    }
  }

  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('OpenClose', async function() {
    await driver.manage().setTimeouts({ implicit: 10000 });
    await goToLSG(driver, Component_URL);

    await driver.findElement(By.css('div.faketable-row input.checkbox')).click()
    await driver.findElement(By.css('div[data-block="CustomPatterns.ActionToolbar"]'))
    await driver.findElement(By.css('div.pattern-preview-header > div.heading6')).click()
    let isToolbarShown = await driver.findElement(By.css('div[data-block="CustomPatterns.ActionToolbar"]')).isDisplayed()
    assert.equal(isToolbarShown, false)
  })

  it('OpenCancel', async function() {
    await driver.manage().setTimeouts({ implicit: 10000 });
    await goToLSG(driver, Component_URL);

    await driver.findElement(By.css('div.pattern-preview-options input.switch')).click()
    await driver.findElement(By.css('div.faketable-row input.checkbox')).click()
    await driver.findElement(By.css('div[data-block="CustomPatterns.ActionToolbar"]'))
    await driver.findElement(By.css('div[data-block="CustomPatterns.ActionToolbar"] .cancel-control')).click()
    let isToolbarShown = await driver.findElement(By.css('div[data-block="CustomPatterns.ActionToolbar"]')).isDisplayed()
    assert.equal(isToolbarShown, false)
  })

  it('OpenMultipleSelections', async function() {
    await driver.manage().setTimeouts({ implicit: 10000 });
    await goToLSG(driver, Component_URL);

    let checkboxes = await driver.findElements(By.css('div.faketable-row input.checkbox'))
    // console.log(checkboxes)
    for (let i = 0; i < checkboxes.length && i <= 2; i++) {
      await checkboxes[i].click();
    }
    await driver.findElement(By.css('div[data-block="CustomPatterns.ActionToolbar"]'))
    let selectedText = await driver.findElement(By.css('div[data-block="CustomPatterns.ActionToolbar"] div.selection-counter > span')).getText()
    assert.equal(selectedText, '3 selected')
  })

  it('OpenMaxSelections', async function() {
    await driver.manage().setTimeouts({ implicit: 10000 });
    await goToLSG(driver, Component_URL);

    let checkboxes = await driver.findElements(By.css('div.faketable-row input.checkbox'))
    // console.log(checkboxes)
    for (let i = 0; i < checkboxes.length; i++) {
      await checkboxes[i].click();
    }
    await driver.findElement(By.css('div[data-block="CustomPatterns.ActionToolbar"]'))
    let selectedText = await driver.findElement(By.css('div[data-block="CustomPatterns.ActionToolbar"] div.selection-counter > span')).getText()
    assert.equal(selectedText, '999+ selected')
  })

  it('OpenClickAction', async function() {
    await driver.manage().setTimeouts({ implicit: 10000 });
    await goToLSG(driver, Component_URL);

    await driver.findElement(By.css('div.faketable-row input.checkbox')).click()
    await driver.findElement(By.css('div[data-block="CustomPatterns.ActionToolbar"]'))
    await driver.findElement(By.css('div[data-block="CustomPatterns.ActionToolbar"] .buttoncomponent-list .buttoncomponent-item')).click()
    await driver.findElement(By.css('div.feedback-message-wrapper > .feedback-message'))
  })

})


