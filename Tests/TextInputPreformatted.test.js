// Generated by Selenium IDE
import { Builder, By, Key } from 'selenium-webdriver'
import { strict as assert } from 'assert';
import 'dotenv/config'
import { goToLSG } from '../utilities.js'

describe('Text Input Preformatted', function() {
  this.timeout(30000)
  let driver
  let vars

  let env = process.env.ENVIRONMENT
  let Component_URL = env == "QA" ? "https://axosbank-qa-sentry.outsystemsenterprise.com/AXOS_Reactive_LSG/PatternDetail?MenuCategoryId=7&MenuSubCategorId=29" : "https://axosbank-dev-sentry.outsystemsenterprise.com/AXOS_Reactive_LSG/PatternDetail?MenuCategoryId=7&MenuSubCategorId=29"

  let savedCookies = null;

  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })

  it('CheckPrefixSuffix', async function() {
    await driver.manage().setTimeouts({ implicit: 2000 });
    savedCookies = await goToLSG(driver, Component_URL, savedCookies);

    const prefixText = await driver.findElement(By.css("span.preformatted-input-prefix")).getText()
    assert.equal(prefixText, "https//:")

    const suffixText = await driver.findElement(By.css("span.preformatted-input-suffix")).getText()
    assert.equal(suffixText, "@whatever.com")
  })

  it('TypeText', async function() {
    await driver.manage().setTimeouts({ implicit: 2000 });
    savedCookies = await goToLSG(driver, Component_URL, savedCookies);

    await driver.findElement(By.css(".preformatted-text input")).sendKeys(Key.CONTROL, "a")
    await driver.findElement(By.css(".preformatted-text input")).sendKeys(Key.DELETE)

    await driver.findElement(By.css(".preformatted-text input")).sendKeys("google")
    const inputVal = await driver.findElement(By.css(".preformatted-hiddenText")).getAttribute("innerHTML")
    assert.equal(inputVal, "google")
  })

  it('CheckErrorText', async function() {
    await driver.manage().setTimeouts({ implicit: 2000 });
    savedCookies = await goToLSG(driver, Component_URL, savedCookies);

    await driver.findElement(By.xpath("//*[contains(text(), 'Validation')]/parent::div/span/input[contains(@class, 'switch')]")).click()
    await driver.findElement(By.xpath("//*[contains(text(), 'Generic error message')]"))
  })
  
})


