// Generated by Selenium IDE
const { Builder, By, Key, until, ExpectedConditions } = require('selenium-webdriver')
const assert = require('assert')

describe('MultiLine Input', function() {
  this.timeout(30000)
  let driver
  let vars

  let savedCookies = null;

  async function goToLSG(driver, componentURL) {
    await driver.get("https://axosbank-dev-sentry.outsystemsenterprise.com/AXOS_Reactive_LSG/")
    driver.manage().window().maximize();
    if (savedCookies != null) {
      for (let i = 0; i < savedCookies.length; i++) {
        // console.log("individual cookie", savedCookies[i])
        await driver.manage().addCookie(savedCookies[i]);
      }
      await driver.navigate().to(componentURL);
    } else {
      await driver.findElement(By.css("#Input_UsernameVal")).click()
      await driver.findElement(By.css("#Input_UsernameVal")).sendKeys("LSG_Dev")
      await driver.findElement(By.css("#Input_PasswordVal")).click()
      await driver.findElement(By.css("#Input_PasswordVal")).sendKeys("pwd123")
      await driver.findElement(By.xpath("//*[@id='b6-Button']/button")).click()
      await driver.findElement(By.xpath("//*[@id='b2-Content']/h1/div[2]/span"))
      await driver.manage().getCookies().then(function(cookies) {
        // console.log('cookie details => ', cookies);
        savedCookies = cookies; 
      });
      await driver.navigate().to(componentURL);
    }
  }

  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('ClickType', async function() {
    await driver.manage().setTimeouts({ implicit: 10000 });
    await goToLSG(driver, "https://axosbank-dev-sentry.outsystemsenterprise.com/AXOS_Reactive_LSG/PatternDetail?MenuCategoryId=8&MenuSubCategorId=77");

    await driver.findElement(By.css('div[data-block="CustomPatterns.MultiLineTextInput"] textarea')).click()
    await driver.findElement(By.css('div[data-block="CustomPatterns.MultiLineTextInput"] textarea')).sendKeys("hello there")
    const inputValue = await driver.findElement(By.css('div[data-block="CustomPatterns.MultiLineTextInput"] textarea')).getAttribute("value")
    assert.equal(inputValue, 'hello there')
  })

  it('AssertDisabled', async function() {
    await driver.manage().setTimeouts({ implicit: 10000 });
    await goToLSG(driver, "https://axosbank-dev-sentry.outsystemsenterprise.com/AXOS_Reactive_LSG/PatternDetail?MenuCategoryId=8&MenuSubCategorId=77");
    await driver.findElement(By.xpath('//label[contains(text(), "Enabled")]/parent::div/span/input')).click()
    await driver.findElement(By.css('div[data-block="CustomPatterns.MultiLineTextInput"] textarea'))
    const disabledValue = await driver.findElement(By.css('div[data-block="CustomPatterns.MultiLineTextInput"] textarea')).getAttribute("disabled")
    assert.equal('true', disabledValue)
  })

  it('AssertRequired', async function() {
    await driver.manage().setTimeouts({ implicit: 10000 });
    await goToLSG(driver, "https://axosbank-dev-sentry.outsystemsenterprise.com/AXOS_Reactive_LSG/PatternDetail?MenuCategoryId=8&MenuSubCategorId=77");
    await driver.findElement(By.xpath('//label[contains(text(), "Mandatory Input")]/parent::div/span/input')).click()
    await driver.findElement(By.css('div[data-block="CustomPatterns.MultiLineTextInput"] textarea'))
    const disabledValue = await driver.findElement(By.css('div[data-block="CustomPatterns.MultiLineTextInput"] textarea')).getAttribute("required")
    assert.equal('true', disabledValue)

    await driver.findElement(By.css('div[data-block="CustomPatterns.MultiLineTextInput"] textarea')).click()
    await driver.findElement(By.css('div.pattern-preview-header')).click()
    const errorShown = await driver.findElement(By.xpath('//span[contains(text(), "Input Must Be Filled")]')).isDisplayed()
    assert.equal(true, errorShown)
  })

  it('AssertRegex', async function() {
    await driver.manage().setTimeouts({ implicit: 10000 });
    await goToLSG(driver, "https://axosbank-dev-sentry.outsystemsenterprise.com/AXOS_Reactive_LSG/PatternDetail?MenuCategoryId=8&MenuSubCategorId=77");
    await driver.findElement(By.xpath('//label[contains(text(), "Mandatory Input")]/parent::div/span/input')).click()

    await driver.findElement(By.css('div[data-block="CustomPatterns.MultiLineTextInput"] textarea')).click()
    await driver.findElement(By.css('div[data-block="CustomPatterns.MultiLineTextInput"] textarea')).sendKeys("Test123")
    const inputValue = await driver.findElement(By.css('div[data-block="CustomPatterns.MultiLineTextInput"] textarea')).getAttribute("value")
    assert.equal(inputValue, 'Test123')

    const errorShown = await driver.findElement(By.xpath('//span[contains(text(), "Numbers not allowed")]')).isDisplayed()
    assert.equal(true, errorShown)
  })
})


